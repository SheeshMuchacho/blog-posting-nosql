import React from 'react';

type AnimatedCardProps = {
  title: string;
  description: string;
  style: number; 
  className?: string;
};

const AnimatedCard = ({ title, description, style, className }: AnimatedCardProps) => {
  const cardConfig = {
    1: {
      color: '#3f9f47',
      svgPath: "M7.84999 4.52304C10.4167 4.87174 12.9833 4.7961 15.55 4.29611C18.1167 3.79612 20.6833 3.77393 23.25 4.22954C25.8167 4.68515 28.3833 4.63313 30.95 4.07349C33.5167 3.51385 36.0833 3.30905 38.65 3.45907C41.2167 3.6091 43.7833 3.64025 46.35 3.55252C48.9167 3.46479 51.4833 3.72872 54.05 4.34432C56.6167 4.95992 59.1833 5.05995 61.75 4.64441C64.3167 4.22888 66.8833 3.95074 69.45 3.81001C72.0167 3.66928 74.5833 3.51867 77.15 3.35817C79.7167 3.19768 82.2833 3.08289 84.85 3.0138C87.4166 2.94472 89.9833 3.10282 92.55 3.48811C95.1167 3.8734 97.5238 4.0717 99.7714 4.08301C102.019 4.09432 103.173 5.38331 103.232 7.94997C103.292 10.5166 103.67 13.0833 104.365 15.65C105.06 18.2166 105.138 20.7833 104.597 23.35C104.057 25.9166 103.853 28.4833 103.984 31.05C104.115 33.6166 103.921 36.1833 103.402 38.75C102.883 41.3166 102.633 43.8833 102.652 46.45C102.671 49.0166 102.93 51.5833 103.427 54.15C103.924 56.7166 104.256 59.2833 104.424 61.85C104.592 64.4166 104.434 66.9833 103.95 69.5499C103.466 72.1166 103.173 74.6833 103.071 77.2499C102.968 79.8166 103.161 82.3833 103.649 84.9499C104.137 87.5166 104.182 90.0833 103.785 92.6499C103.388 95.2166 103.291 97.854 103.494 100.562C103.698 103.27 102.517 104.445 99.95 104.088C97.3834 103.73 94.8167 103.807 92.25 104.318C89.6834 104.83 87.1167 104.777 84.55 104.159C81.9834 103.541 79.4167 103.494 76.8501 104.017C74.2834 104.54 71.7167 104.474 69.1501 103.82C66.5834 103.165 64.0167 102.893 61.4501 103.003C58.8834 103.114 56.3167 103.442 53.7501 103.989C51.1834 104.536 48.6167 104.517 46.0501 103.933C43.4834 103.348 40.9167 103.085 38.3501 103.144C35.7834 103.202 33.2167 103.585 30.65 104.292C28.0834 104.999 25.5167 104.974 22.95 104.217C20.3834 103.46 17.8167 103.267 15.25 103.638C12.6834 104.009 10.049 104.112 7.3471 103.947C4.64516 103.782 3.21816 102.417 3.06612 99.85C2.91407 97.2833 3.27189 94.7166 4.13956 92.15C5.00724 89.5833 5.22889 87.0166 4.80451 84.45C4.38014 81.8833 4.37256 79.3166 4.78179 76.75C5.19101 74.1833 5.23802 71.6166 4.92281 69.0499C4.60759 66.4833 4.31893 63.9166 4.05682 61.3499C3.7947 58.7833 3.76382 56.2166 3.96416 53.6499C4.1645 51.0832 4.12396 48.5166 3.84252 45.9499C3.56109 43.3832 3.70993 40.8166 4.28905 38.2499C4.86817 35.6832 5.17886 33.1165 5.22111 30.5499C5.26336 27.9832 4.95095 25.4165 4.28387 22.8499C3.61679 20.2832 3.15862 17.7165 2.90935 15.1499C2.66007 12.5832 2.77953 10.0832 3.26771 7.64992C3.7559 5.21663 5.28332 4.17434 7.84999 4.52304Z",
      viewBox: "0 0 108 108",
      dashArray: "331 66",
      dashOffset: "-397px",
      animation: "reverse",
      duration: "7s"
    },
    2: {
      color: '#ff3636',
      svgPath: "M5.99995 7.0001H6.09995L10.75 4.97102L15.5 7.11381L20.25 7.65424L25 6.38528L29.75 5.07185L34.5 4.37598L39.25 7.4074L44 7.71973L48.75 9.00461L53.5 7.51571L58.2499 5.1471L63 4.93949L67.75 4.5446L72.5 7.10172L77.2499 5.61113L81.9999 9.29682L86.75 5.8137L91.5 7.16559L96.2499 7.20386L101 7.98377L105.75 5.04723L106.697 11.5001L108.122 16.2501L105.081 21.0001L103.973 25.7501L103.867 30.5001L103.895 35.2501L103.822 40.0001L103.304 44.7501L103.708 49.5001L108.454 54.2501L105.779 59.0001L106.911 63.7501L105.035 68.5001L105.647 73.2501L107.383 78.0001L108.242 82.7501L105.152 87.5001L108.615 92.2501L104.166 97.0001L106.903 101.75L105.494 106.5L101.75 105.427L96.9999 109.341L92.2499 105.701L87.4999 104.923L82.7499 105.233L78 107.709L73.25 107.43L68.5 104.508L63.75 106.291L59 108.664L54.25 105.196L49.5 109.575L44.75 107.241L39.9999 108.489L35.25 106.15L30.5 106.605L25.75 104.843L20.9999 108.664L16.25 106.547L11.5 106.779L6.74995 108.331L4.42624 103L8.16474 98.2501L8.15011 93.5001L5.73984 88.7501L4.98589 84.0001L6.8467 79.2501L5.48534 74.5001L8.23187 69.7501L6.24534 65.0001L4.77584 60.2501L6.44667 55.5001L8.31979 50.7501L5.89976 46.0001L4.09119 41.2501L3.98213 36.5001L3.31506 31.7501L5.71742 27.0001L4.85499 22.2501L5.21783 17.5001L8.43265 12.7501L6.15278 8.00009L5.99995 7.0001Z",
      viewBox: "0 0 112 113",
      dashArray: "307 131",
      dashOffset: "-438px",
      animation: "normal",
      duration: "9s"
    },
    3: {
      color: '#00a9ff',
      svgPath: "M5.38753 4.89455C5.69587 5.09339 6.0042 5.09227 6.31253 4.89117L7.23753 4.28788C7.54587 4.08679 7.8542 3.88806 8.16253 3.69172L9.08753 3.10267C9.39587 2.90633 9.7042 2.98486 10.0125 3.33827L10.9375 4.39849C11.2459 4.7519 11.5542 4.90381 11.8625 4.85422L12.7875 4.70547C13.0959 4.65588 13.4042 4.50512 13.7125 4.25317L14.6375 3.49732C14.9459 3.24537 15.2542 3.19525 15.5625 3.34697L16.4875 3.8021C16.7959 3.95381 17.1042 4.09265 17.4125 4.21861L18.3375 4.5965C18.6459 4.72246 18.9542 4.61662 19.2625 4.27897L20.1875 3.26604C20.4959 2.92839 20.8042 2.90268 21.1125 3.18891L22.0375 4.04761C22.3459 4.33384 22.6542 4.49937 22.9625 4.5442L23.8875 4.6787C24.1959 4.72354 24.5042 4.64068 24.8125 4.43013L25.7375 3.79848C26.0459 3.58793 26.3542 3.55854 26.6625 3.71033L27.5875 4.16568C27.8959 4.31746 28.2042 4.45217 28.5125 4.5698L29.4375 4.92269C29.7459 5.04032 30.0542 5.12415 30.3625 5.17417L31.2875 5.32425C31.5959 5.37427 31.9042 5.26194 32.2125 4.98725L33.1375 4.16319C33.4459 3.8885 33.7542 3.8652 34.0625 4.0933L34.9875 4.77758C35.2959 5.00568 35.6042 5.05637 35.9125 4.92967L36.8375 4.54957C37.1459 4.42286 37.4542 4.41178 37.7625 4.5163L38.6875 4.82988C38.9959 4.9344 39.3042 4.9964 39.6125 5.01587L40.5375 5.07429C40.8459 5.09377 41.1542 5.04545 41.4625 4.92935L42.3875 4.58105C42.6959 4.46495 43.0042 4.40917 43.3125 4.4137L44.2375 4.42732C44.5459 4.43186 44.8542 4.42243 45.1625 4.39902L46.0875 4.32881C46.3959 4.30541 46.7042 4.17067 47.0125 3.92461L47.9375 3.18642C48.2459 2.94035 48.5542 3.00455 48.8625 3.37902L49.7875 4.50243C50.0959 4.8769 50.4042 4.94819 50.7125 4.71629L51.6375 4.0206C51.9459 3.7887 52.2542 3.58968 52.5625 3.42353L53.4875 2.9251C53.7959 2.75896 54.1042 2.68291 54.4125 2.69696L55.3375 2.7391C55.6459 2.75314 55.9542 2.98145 56.2625 3.42402L57.1875 4.75172C57.4959 5.19429 57.8042 5.39609 58.1125 5.35712L59.0375 5.2402C59.3459 5.20122 59.6542 4.9609 59.9625 4.51923L60.8875 3.19421C61.1959 2.75254 61.5042 2.7598 61.8125 3.216L62.7375 4.58461C63.0459 5.04081 63.3542 5.23096 63.6625 5.15507L64.5875 4.92738C64.8958 4.85149 65.2042 4.73895 65.5125 4.58977L66.4375 4.14223C66.7458 3.99305 67.0542 3.8288 67.3625 3.64947L68.2875 3.11148C68.5958 2.93215 68.9042 3.06258 69.2125 3.50278L70.1375 4.82338C70.4458 5.26358 70.7542 5.39299 71.0625 5.2116L71.9875 4.66744C72.2958 4.48606 72.6042 4.42419 72.9125 4.48183L73.8375 4.65476C74.1458 4.71241 74.4542 4.67917 74.7625 4.55505L75.6875 4.18269C75.9958 4.05858 76.3042 3.93477 76.6125 3.81127L77.5375 3.44078C77.8458 3.31728 78.1542 3.39268 78.4625 3.66698L79.3875 4.48989C79.6958 4.76419 80.0042 4.70676 80.3125 4.31761L81.2375 3.15014C81.5458 2.76099 81.8542 2.75009 82.1625 3.11746L83.0875 4.21958C83.3958 4.58695 83.7042 4.75298 84.0125 4.71767L84.9375 4.61176C85.2458 4.57645 85.5542 4.4194 85.8625 4.1406L86.7875 3.3042C87.0958 3.02539 87.4042 2.9036 87.7125 2.93881L88.6375 3.04445C88.9458 3.07967 89.2542 3.2896 89.5625 3.67426L90.4875 4.82823C90.7958 5.21289 91.1042 5.20121 91.4125 4.79318L92.3375 3.56911C92.6458 3.16109 92.9542 3.02207 93.2625 3.15205L94.1875 3.542C94.4958 3.67199 94.8042 3.78533 95.1125 3.88204L96.0375 4.17217C96.3458 4.26888 96.6542 4.20183 96.9625 3.97102L97.8875 3.27859C98.1958 3.04778 98.5042 2.99605 98.8125 3.12338L99.7375 3.5054C100.046 3.63274 100.354 3.70154 100.662 3.71179L101.587 3.74255C101.896 3.7528 102.204 3.68358 102.512 3.53488L103.437 3.08879C103.746 2.94009 103.797 3.10608 103.59 3.58674L102.97 5.02872C102.763 5.50938 102.882 5.90387 103.327 6.21221Z",
      viewBox: "0 0 108 108",
      dashArray: "309 154",
      dashOffset: "-463px",
      animation: "alternate-reverse",
      duration: "5s"
    }
  };

  const config = cardConfig[style];
  
  return (
    <div className={`relative p-6 rounded-lg overflow-visible z-10 ${className}`}>
      <div className={`card-${style} absolute inset-0`} />
      <svg
        className={`svg-${style} absolute inset-0 w-full h-full pointer-events-none z-[-1]`}
        preserveAspectRatio="none"
        stroke={config.color}
        strokeWidth="5"
        strokeLinejoin="round"
        strokeLinecap="round"
        viewBox={config.viewBox}
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
      >
        <path d={config.svgPath} />
      </svg>

      <div className="relative bg-gray-200 rounded-lg p-8 z-10">
        <div 
          className={`circle-${style} absolute -top-4 -right-4 w-16 h-16 rounded-full z-10`}
          style={{ 
            border: `20px solid ${config.color}`,
            width: '70px',
            height: '70px'
          }}
        />

        <h2 className="text-black font-bold text-4xl leading-tight capitalize mb-5">
          {title}
        </h2>

        <div className="pl-8 border-l border-black text-justify mb-6 overflow-hidden line-clamp-4">
          {description}
        </div>

        <button 
          className={`button-${style} relative flex items-center justify-between px-4 py-2 cursor-pointer rounded overflow-hidden z-10`}
          style={{ backgroundColor: config.color }}
        >
          <span className="text-white font-medium mr-2">Read More</span>
          <span className="arrow flex items-center text-white transition-all duration-300 ease-in-out">
            ››
          </span>
        </button>
      </div>
    </div>
  );
};

export default AnimatedCard;